function cout(a) {
}

function vSetDebugLoggingOn() {
}

function vout(a) {
}

function vobj(a) {
}

function vtime(a) {
}

function verror(a) {
    alert("ERROR: " + a);
    vDebugLoggingOn && console.log("ERROR: " + a)
}

function vResetTimer() {
    vLastTimer = (new Date).getTime()
}

function vShowTimer() {
    if (vDebugLoggingOn) {
        var a = (new Date).getTime();
        console.log("vtimer: " + (a - vLastTimer) + " (cur=" + a + " last=" + vLastTimer + ")");
        vLastTimer = a
    }
}

function VDatabase() {
    var a = this;
    this.load = function (b, e) {
        function d(m) {
            var A = m.substring(m.lastIndexOf("/") + 1, m.lastIndexOf("-Table 1"));
            VUtils.loadTextFromURL(m, function (f) {
                if (null != m.toLowerCase().indexOf(".csv")) {
                    var v = void 0;
                    void 0 == v && (v = ",");
                    v && 1 < v.length && (v = ",");
                    for (var r = 0, h = f.charAt(r), t = 0, w = 0, q = []; "" != h;) {
                        for (; " " == h || "\t" == h || "\r" == h;) h = f.charAt(++r);
                        var n = "";
                        if ('"' == h) {
                            h = f.charAt(++r);
                            do ('"' != h && (n += h, h = f.charAt(++r)), '"' == h) && '"' == f.charAt(r + 1) && (n += '"', r += 2, h = f.charAt(r)); while ("" !=
                            h && '"' != h);
                            if ("" == h) throw"Unexpected end of data, double-quote expected";
                            h = f.charAt(++r)
                        } else for (; "" != h && h != v && "\n" != h && "\t" != h && "\r" != h;) n += h, h = f.charAt(++r);
                        q.length <= t && q.push([]);
                        for (q[t].push(n); " " == h || "\t" == h || "\r" == h;) h = f.charAt(++r);
                        if (h == v) w++; else if ("\n" == h) w = 0, t++; else if ("" != h) throw"Delimiter expected after character " + r + "   " + h + "    " + h.charCodeAt(0);
                        if (h = f.charAt(++r), "" == h && 0 < t) for (; w < q[t - 1].length;) q[t].push(""), ++w
                    }
                    f = [];
                    v = [];
                    r = [];
                    for (h = 0; h < q[0].length; ++h) t = q[0][h], -1 != t.indexOf("[]") ?
                        r.push(!0) : r.push(!1), v.push(t.replace("[]", ""));
                    for (t = 1; t < q.length; ++t) {
                        w = q[t];
                        n = {};
                        for (h = 0; h < q[t].length; ++h) {
                            var y = w[h].replace(/^\s+|\s+$/gm, "");
                            r[h] ? (void 0 == n[v[h]] && (n[v[h]] = []), "[BLANK]" == y ? n[v[h]].push("") : "" != y && n[v[h]].push(y)) : n[v[h]] = y
                        }
                        f.push(n)
                    }
                    a[A] = f
                } else -1 != m.toLowerCase().indexOf(".json") ? a[A] = JSON.parse(f) : verror("VDatabase(): Unexpected file type: " + m);
                ++l;
                l < b.length ? d(b[l]) : e()
            })
        }

        var l = 0;
        d(b[l])
    }
}

function GUI(a, b) {
    function e(a, e, b, k) {
        var E = {}, C = a.indexOf("=");
        if (-1 == C) E.type = a, E.data = []; else for (E.type = a.substring(0, C), E.data = []; C < a.length - 1;) {
            var K = a.indexOf("|", C + 1);
            -1 == K && (K = a.length);
            E.data.push(a.substring(C + 1, K));
            C = K
        }
        a = (void 0 != e && (E.data.push(e), void 0 != b && (E.data.push(b), void 0 != k && E.data.push(k))), E);
        switch (g.abortOutlining(), a.type) {
            case "ClosePopup":
                d();
                0 != F && (--F, n());
                break;
            case "ToolsPopup":
                "ToolsPopup" == x ? (x = "", $(".v-options-popup").hide()) : (g.abortOutlining(), x = "ToolsPopup",
                    $(".v-rooms-popup").fadeOut(), $(".v-tiles-popup").fadeOut(), $(".v-grout-popup").fadeOut(), $(".v-paint-popup").fadeOut(), $(".v-options-popup").fadeIn(), $(".v-patterns-popup").fadeOut(), $(".v-email-popup").fadeOut(), $(".v-share-popup").fadeOut());
                break;
            case "RoomsPopup":
                l();
                break;
            case "TilesPopup":
                A();
                break;
            case "GroutPopup":
                "GroutPopup" == x ? (x = "", $(".v-grout-popup").hide()) : (g.abortOutlining(), x = "GroutPopup", v(), $(".v-options-popup").fadeOut(), $(".v-rooms-popup").fadeOut(), $(".v-tiles-popup").fadeOut(),
                    $(".v-grout-popup").fadeIn(), $(".v-paint-popup").fadeOut(), $(".v-patterns-popup").fadeOut(), $(".v-email-popup").fadeOut(), $(".v-share-popup").fadeOut());
                break;
            case "PaintPopup":
                "PaintPopup" == x ? (x = "", $(".v-paint-popup").hide()) : (g.abortOutlining(), x = "PaintPopup", r(), $(".v-options-popup").fadeOut(), $(".v-rooms-popup").fadeOut(), $(".v-tiles-popup").fadeOut(), $(".v-grout-popup").fadeOut(), $(".v-paint-popup").fadeIn(), $(".v-patterns-popup").fadeOut(), $(".v-email-popup").fadeOut(), $(".v-share-popup").fadeOut());
                break;
            case "PatternsPopup":
                "PatternsPopup" == x ? (x = "", $(".v-patterns-popup").hide()) : g.isChangePatternMode() ? (g.setCurPattern(null), n()) : (x = "PatternsPopup", t(), $(".v-options-popup").fadeOut(), $(".v-tiles-popup").fadeOut(), $(".v-grout-popup").fadeOut(), $(".v-paint-popup").fadeOut(), $(".v-rooms-popup").fadeOut(), $(".v-patterns-popup").fadeIn());
                break;
            case "EmailPopup":
                "EmailPopup" == x ? (x = "", $(".v-email-popup").hide()) : (x = "EmailPopup", G = H = c = "", (-1 != location.href.indexOf("cjc-macbookpro") || -1 != location.href.indexOf("localhost")) &&
                (c = "Ashkan Ashtiani", H = "ashcan@3dln.com", G = ""), $(".v-email-entry input").eq(0).val(c), $(".v-email-entry input").eq(1).val(H), $(".v-email-entry textarea").val(G), $(".v-options-popup").fadeOut(), $(".v-tiles-popup").fadeOut(), $(".v-grout-popup").fadeOut(), $(".v-paint-popup").fadeOut(), $(".v-rooms-popup").fadeOut(), $(".v-patterns-popup").fadeOut(), $(".v-email-popup").fadeIn());
                break;
            case "EmailFrom":
                c = a.data[0];
                break;
            case "EmailTo":
                H = a.data[0];
                break;
            case "EmailMessage":
                G = a.data[0];
                break;
            case "SendEmail":
                g.sendEmail(c,
                    H, G);
                d();
                break;
            case "Print":
                g.print();
                break;
            case "SharePopup":
                "SharePopup" == x ? (x = "", $(".v-share-popup").hide()) : (x = "SharePopup", $(".v-preparing-share").hide(), $(".v-share").hide(), $(".v-options-popup").fadeOut(), $(".v-tiles-popup").fadeOut(), $(".v-grout-popup").fadeOut(), $(".v-paint-popup").fadeOut(), $(".v-rooms-popup").fadeOut(), $(".v-patterns-popup").fadeOut(), $(".v-email-popup").fadeOut(), $(".v-share-popup").fadeIn());
                break;
            case "Facebook":
                w("Facebook");
                break;
            case "Twitter":
                w("Twitter");
                break;
            case "Pinterest":
                w("Pinterest");
                break;
            case "SendShare":
                g.sendShare();
                d();
                break;
            case "Save":
                g.save();
                d();
                break;
            case "SelectRoomType":
                g.setCurRoomType(a.data[0]);
                m();
                break;
            case "SelectTileCategory":
                g.setCurTileCategory(a.data[0]);
                f();
                break;
            case "ToggleSingleTile":
                g.toggleSingleTileMode();
                n();
                q();
                d();
                g.isSingleTileMode() && A();
                break;
            case "ToggleRotateTile":
                g.toggleRotateTileMode();
                n();
                q();
                d();
                break;
            case "Search":
                g.curSearchString = a.data;
                f();
                break;
            case "ToggleFilter":
                g.toggleFilter(a.data[0], a.data[1]);
                h();
                break;
            case "RemoveFilter":
                g.toggleFilter(a.data[0], a.data[1]);
                f();
                break;
            case "SelectRoomId":
                if ("Disabled" == a.data[0]) break;
                if (!g.setCurRoom(a.data[0])) break;
                m();
                d();
                0 != F && --F;
                y();
                break;
            case "SelectSavedRoom":
                g.setCurSavedRoom(a.data[0]);
                m();
                d();
                y();
                break;
            case "DeleteSavedRoom":
                g.deleteSavedRoom(a.data[0]);
                m();
                break;
            case "SelectTileSKU":
                if ("Disabled" == a.data[0]) break;
                g.setCurTileSKU(a.data[0]);
                f();
                q();
                d();
                I = !1;
                0 != F && (--F, n());
                $(".v-tiles-popup").removeClass("show");
                break;
            case "SelectGrout":
                g.setCurGrout(a.data[0]);
                v();
                q();
                d();
                break;
            case "SelectPaint":
                g.setCurPaint(a.data[0]);
                r();
                q();
                d();
                break;
            case "SelectPattern":
                a = a.data[0];
                null != a && $(".v-pattern-button").removeClass(g.getCurPattern());
                $(".v-pattern-button").addClass(a);
                g.setCurPattern(a);
                t();
                n();
                q();
                d();
                break;
            case "ShowFilters":
                g.showFilters();
                f();
                h();
                break;
            case "ShowFilteredTiles":
                g.showTiles();
                f();
                h();
                break;
            case "AddNewZone":
                g.addNewZone();
                d();
                break;
            case "DeleteZone":
                g.deleteZone();
                d();
                break;
            case "EditZone":
                g.editZone();
                d();
                break;
            case "TileZone":
                g.tileZone();
                d();
                break;
            case "GroutZone":
                g.groutZone();
                d();
                break;
            case "DeleteSingleTile":
                g.deleteSingleTile();
                d();
                break;
            case "MoveSingleTile":
                g.moveSingleTile();
                d();
                break;
            case "ChangeSingleTile":
                g.changeSingleTile();
                d();
                break;
            case "Clear":
                g.clear();
                n();
                d();
                break;
            case "Undo":
                g.undo();
                n();
                d();
                break;
            case "Redo":
                g.redo(), n(), d()
        }
    }

    function d() {
        var a = x;
        x = "";
        $(".v-rooms-popup").hide();
        $(".v-tiles-popup").hide();
        $(".v-grout-popup").hide();
        $(".v-paint-popup").hide();
        $(".v-patterns-popup").hide();
        $(".v-email-popup").hide();
        $(".v-share-popup").hide();
        $(".v-options-popup").hide();
        $(".v-decorate-actions-popup").hide();
        "TilesPopup" == a && (I = !1);
        "RoomsPopup" == a && I && y()
    }

    function l() {
        return "RoomsPopup" == x ? (x = "", void $(".v-rooms-popup").hide()) : (g.abortOutlining(), x = "RoomsPopup", m(), $(".v-options-popup").fadeOut(), $(".v-tiles-popup").fadeOut(), $(".v-grout-popup").fadeOut(), $(".v-paint-popup").fadeOut(), $(".v-rooms-popup").fadeIn(), $(".v-patterns-popup").fadeOut(), $(".v-email-popup").fadeOut(), void $(".v-share-popup").fadeOut())
    }

    function m() {
        for (var a = 0, b = "", d = 0; d < k.roomTypes.length; ++d) {
            var c = B.replace("[roomTypeText]", k.roomTypes[d].type);
            b += c.replace("[ACTION]", "SelectRoomType=" + k.roomTypes[d].type);
            k.roomTypes[d].type == g.getCurRoomType() && (a = d)
        }
        if ($(".v-rooms-popup-tabs").html(b), $(".v-rooms-popup-tabs li").removeClass("v-active"), $(".v-rooms-popup-tabs li").eq(a).addClass("v-active"), b = "", "Saved" == g.getCurRoomType()) for (d = 0; d < k.savedRooms.length; ++d) a = k.savedRooms[d], c = z.replace("thumbnails/rooms/template-placeholder.png",
            a.thumbnail), c = c.replace("SelectRoomId=[ROOMID]", "SelectSavedRoom=" + d), c = c.replace("[SAVEDROOMINDEX]", d), c = c.replace("[HIDE]", ""), b += c; else for (d = 0; d < k.rooms.length; ++d) if (a = k.rooms[d], "" == a.ignore && ("*" == g.getCurRoomType() || a.type == g.getCurRoomType())) {
            c = z.replace("template-placeholder.png", a.id + ".JPEG");
            var f = "";
            null != g.getCurRoom() && a.id == g.getCurRoom().id && (f = "v-active");
            c = c.replace("[ACTIVE]", f);
            f = "";
            a.disabled && (f = "v-disabled");
            c = c.replace("[DISABLED]", f);
            c = a.disabled ? c.replace("[ROOMID]", "Disabled") :
                c.replace("[ROOMID]", k.rooms[d].id);
            c = c.replace("[HIDE]", "v-hide");
            b += c
        }
        $(".v-room-thumbnails-inject").html(b);
        $(".v-rooms-popup .v-actiond").click(function () {
            e($(this).data("v-action"))
        })
    }

    function A() {
        return "TilesPopup" == x ? (x = "", void $(".v-tiles-popup").hide()) : (g.abortOutlining(), x = "TilesPopup", f(), $(".v-options-popup").fadeOut(), $(".v-rooms-popup").fadeOut(), $(".v-tiles-popup").fadeIn(), $(".v-grout-popup").fadeOut(), $(".v-paint-popup").fadeOut(), $(".v-patterns-popup").fadeOut(), $(".v-email-popup").fadeOut(),
            void $(".v-share-popup").fadeOut())
    }

    function f() {
        function a(a) {
            return "" != g.curSearchString && -1 == a.name.toLowerCase().indexOf(g.curSearchString) && -1 == a.category.toLowerCase().indexOf(g.curSearchString) && -1 == a.finish.toLowerCase().indexOf(g.curSearchString) ? !1 : !0
        }

        function d(a) {
            for (var c = 0, b = 0; b < k.tileFilters.length; ++b) {
                for (var e = 0, d = 0; d < k.tileFilters[b].filterValues.length; ++d) if (g.filterIsOn(k.tileFilters[b].tileProperty, k.tileFilters[b].filterValues[d]) && (++e, a[k.tileFilters[b].tileProperty] == k.tileFilters[b].filterValues[d])) {
                    ++c;
                    break
                }
                0 == e && ++c
            }
            return vout(c), c == k.tileFilters.length ? !0 : !1
        }

        if (g.showingFilters) return void $(".v-tile-selection").hide();
        for (var b = 0, e = "", c = 0; c < k.tileCategories.length; ++c) {
            var f = D.replace("[tileCategoryText]", k.tileCategories[c].displayText);
            e += f.replace("[ACTION]", "SelectTileCategory=" + k.tileCategories[c].category);
            k.tileCategories[c].category == g.curTileCategory && (b = c)
        }
        $(".v-tiles-popup-tabs-inject").html(e);
        $(".v-tiles-popup-tabs li").removeClass("v-active");
        $(".v-tiles-popup-tabs li").eq(b).addClass("v-active");
        "Recent" == g.curTileCategory ? $(".v-search-container").hide() : $(".v-search-container").show();
        e = "";
        for (c = 0; c < k.tileFilters.length; ++c) {
            for (b = 0; b < k.tileFilters[c].filterValues.length; ++b) g.filterIsOn(k.tileFilters[c].tileProperty, k.tileFilters[c].filterValues[b]) && (f = p.replace("[FILTERONBUTTONTEXT]", k.tileFilters[c].filterValues[b]), f = f.replace("[tileProperty]", k.tileFilters[c].tileProperty), f = f.replace("[filterValue]", k.tileFilters[c].filterValues[b]), e += f);
            $(".v-tile-filters-inject").html(e)
        }
        b = [];
        "Recent" == g.curTileCategory && ($("#filters").hide(), $("#products").hide(), setTimeout(function () {
            $(".v-tile-thumbnails-inject").find(".col-xs-3").show().addClass("bang");
            $(".v-tile-thumbnails-inject").find(".col-xs-3").css("display", "block !important")
        }, 100));
        "*" == g.curTileCategory && ($("#filters").show(), $("#products").show());
        if ("Recent" == g.curTileCategory) for (c = 0; c < g.recentlyUsedTiles.length; ++c) {
            var h = g.recentlyUsedTiles[c];
            b.push(h)
        } else for (c = 0; c < k.tiles.length; ++c) h = k.tiles[c], ("*" == g.curTileCategory ||
            h.category == g.curTileCategory) && a(h) && d(h) && b.push(h);
        e = "";
        for (c = 0; c < b.length; ++c) {
            h = b[c];
            f = u.replace("images/template-placeholder.png", h.thumbnail);
            var C = "";
            null != g.getCurTile() && h.sku == g.getCurTile().sku && (C = "v-active");
            f = f.replace("[ACTIVE]", C);
            C = "";
            h.disabled && (C = "v-disabled");
            f = f.replace("[DISABLED]", C);
            f = h.disabled ? f.replace("[SKU]", "Disabled") : f.replace("[SKU]", h.sku);
            e += f.replace("[TILETHUMBNAILTEXT]", h.name + " " + h.sku + " (" + h.widthCM + "x" + h.heightCM + "cm)")
        }
        $(".v-tile-thumbnails-inject").html(e);
        $(".v-tile-selection").show()
    }

    function v() {
        for (var a = "", c = 0; c < k.grout.length; ++c) {
            var b = k.grout[c], d = M.replace("[GROUTCOLOUR]", b.rgb), f = "";
            null != g.getCurGrout() && b.rgb == g.getCurGrout() && (f = "v-active");
            d = d.replace("[ACTIVE]", f);
            a += d.replace("background-color: red", "background-color: #" + b.rgb)
        }
        $(".v-grout-thumbnails-inject").html(a);
        $(".v-grout-popup .v-actiond").click(function () {
            e($(this).data("v-action"))
        })
    }

    function r() {
        for (var a = "", c = 0; c < k.paint.length; ++c) {
            var b = k.paint[c], d = N.replace("[PAINTCOLOUR]",
                b.rgb), f = "";
            null != g.getCurPaint() && b.rgb == g.getCurPaint() && (f = "v-active");
            d = d.replace("[ACTIVE]", f);
            a += d.replace("background-color: red", "background-color: #" + b.rgb)
        }
        $(".v-paint-thumbnails-inject").html(a);
        $(".v-paint-popup .v-actiond").click(function () {
            e($(this).data("v-action"))
        })
    }

    function h() {
        if (!g.showingFilters) return void $(".v-filters-container").hide();
        for (var a = "", c = 0; c < k.tileFilters.length; ++c) a += L.replace("[FILTERTITLE]", k.tileFilters[c].title);
        $(".v-filter-groups-list").html(a);
        for (c =
                 0; c < k.tileFilters.length; ++c) {
            a = "";
            for (var b = 0; b < k.tileFilters[c].filterValues.length; ++b) {
                var d = C.replace("[FILTERBUTTONTEXT]", k.tileFilters[c].filterValues[b]);
                d = d.replace("[tileProperty]", k.tileFilters[c].tileProperty);
                d = d.replace("[filterValue]", k.tileFilters[c].filterValues[b]);
                d = g.filterIsOn(k.tileFilters[c].tileProperty, k.tileFilters[c].filterValues[b]) ? d.replace("[ACTIVE]", "v-active") : d.replace("[ACTIVE]", "");
                a += d
            }
            $(".v-filter-group-buttons-list").eq(c).html(a)
        }
        $(".v-filters-container").show();
        $(".v-filter-groups-list .v-actiond").click(function () {
            e($(this).data("v-action"))
        })
    }

    function t() {
        $(".v-pattern-thumbnail-container").removeClass("v-active");
        $('.v-pattern-thumbnail-container[data-v-pattern="' + g.getCurPattern() + '"]').addClass("v-active");
        $(".v-patterns-popup .v-actiond").click(function () {
            e($(this).data("v-action"))
        })
    }

    function w(a) {
        $(".v-preparing-share").show();
        g.prepareShare(a, function () {
            $(".v-preparing-share").hide();
            $(".v-share").show()
        })
    }

    function q() {
        if ("Tile" == g.getCurDecorateMode()) {
            if ($(".v-selected-tile-thumbnail").hide(),
                    $(".v-selected-tile-thumbnail").removeClass("v-active"), null != g.getCurTile()) {
                for (var a = 0, c = 0; c < g.recentlyUsedTiles.length; ++c) {
                    var b = g.recentlyUsedTiles[c];
                    if ($(".v-selected-tile-thumbnail").eq(4 - c).attr("src", b.thumbnail), $(".v-selected-tile-thumbnail").eq(4 - c).show(), b.sku == g.getCurTile().sku && $(".v-selected-tile-thumbnail").eq(4 - c).addClass("v-active"), $(".v-selected-tile-thumbnail").eq(4 - c).data("v-action", "SelectTileSKU=" + b.sku), ++a, 5 == a) break
                }
                $(".v-current-selections").show()
            } else $(".v-current-selections").hide();
            $(".v-selected-pattern-icon").hide();
            $(".v-tiling-mode-container").hide();
            $(".v-selected-grout").hide();
            $(".v-selected-paint").hide()
        } else "Grout" == g.getCurDecorateMode() ? ($(".v-selected-grout").css("background-color", "#" + g.getCurGrout()), $(".v-current-selections").show(), $(".v-selected-grout").show(), $(".v-selected-tile-thumbnail").hide(), $(".v-tiling-mode-container").hide(), $(".v-selected-pattern-icon").hide(), $(".v-selected-paint").hide()) : ($(".v-selected-paint").css("background-color", "#" + g.getCurPaint()),
            $(".v-current-selections").show(), $(".v-selected-grout").show(), $(".v-selected-tile-thumbnail").hide(), $(".v-tiling-mode-container").hide(), $(".v-selected-pattern-icon").hide(), $(".v-selected-paint").show(), $(".v-selected-grout").hide())
    }

    function n() {
        g.anythingToUndo() ? $(".v-undo-button").show() : $(".v-undo-button").hide();
        g.anythingToUndo() ? $(".v-clear-all-button").show() : $(".v-clear-all-button").hide();
        g.anythingToRedo() ? $(".v-redo-button").show() : $(".v-redo-button").hide();
        g.isRoomDecorated() ? ($(".v-save-button").show(),
            $(".v-print-button").show(), $(".v-email-button").show(), $(".v-share-button").show()) : ($(".v-save-button").hide(), $(".v-print-button").hide(), $(".v-email-button").hide(), $(".v-share-button").hide());
        g.isSingleTileMode() ? $(".v-single-tile-button").addClass("v-active") : $(".v-single-tile-button").removeClass("v-active");
        g.isRotateTileMode() ? $(".v-rotate-tile-button").addClass("v-active") : $(".v-rotate-tile-button").removeClass("v-active");
        g.isChangePatternMode() ? $(".v-pattern-button").addClass("v-active") :
            $(".v-pattern-button").removeClass("v-active");
        0 == F ? ($(".v-left-button-group").show(), $(".v-right-button-group").show(), $(".v-top-button-group").show()) : ($(".v-left-button-group").hide(), $(".v-right-button-group").hide(), $(".v-top-button-group").hide())
    }

    function y() {
        I && null == g.getCurTile() && A();
        I = !1
    }

    var g = a, k = b, B = $(".v-rooms-popup-tab-template").html(), z = $(".v-room-thumbnail-template").html(),
        D = $(".v-tiles-popup-tab-template").html(), p = $(".v-filter-on-button-template").html(),
        u = $(".v-tile-thumbnail-template").html(),
        L = $(".v-filter-group-template").html(), C = $(".v-filter-button-template").html(),
        M = $(".v-grout-thumbnail-template").html(), N = $(".v-paint-thumbnail-template").html(), x = "", J = null,
        c = "", H = "", G = "", I = !0, F = 2;
    -1 != location.href.indexOf("cjc-macbookpro") && (F = 0);
    $(".v-action").click(function () {
        e($(this).data("v-action"))
    });
    $(".v-action-key").keyup(function () {
        e($(this).data("v-action"), $(this).val())
    });
    $(".v-decorate-actions-popup .v-actiond").click(function () {
        e($(this).data("v-action"))
    });
    this.setup = function () {
        h();
        for (var a = 0; a < k.roomTypes.length; ++a) if ("y" == k.roomTypes[a].defaultTo) {
            g.setCurRoomType(k.roomTypes[a].type);
            m();
            break
        }
        for (a = 0; a < k.tileCategories.length; ++a) if ("y" == k.tileCategories[a].defaultTo) {
            g.setCurTileCategory(k.tileCategories[a].category);
            break
        }
        q();
        $(".v-pattern-button").addClass(g.getCurPattern());
        $(".v-page-container").fadeIn();
        for (a = 0; a < k.rooms.length; ++a) if ("" != k.rooms[a].initialLoad) {
            g.setCurRoom(k.rooms[a].id);
            break
        }
        n();
        VUtils.isTabletOrPhoneDevice() && $(".v-icon-button").addClass("v-disable-touch-button-hover")
    };
    this.showMessage = function (a, c) {
        if (vout("showMessage(): " + a), void 0 == c ? c = 3E3 : -1 == c && (c = 999999), null != J && (clearTimeout(J), J = null), null == a) return void $(".v-message").hide();
        for (; -1 != a.indexOf("[click]");) a = VUtils.isTabletOrPhoneDevice() ? a.replace("[click]", "tap") : a.replace("[click]", "click");
        for (; -1 != a.indexOf("[Click]");) a = VUtils.isTabletOrPhoneDevice() ? a.replace("[Click]", "Tap") : a.replace("[Click]", "Click");
        $(".v-message").html(a);
        $(".v-message").show();
        J = setTimeout(function () {
                J = null;
                $(".v-message").hide()
            },
            c)
    };
    this.message = function (a) {
        null == a ? $(".v-message").fadeOut() : ($(".v-message").html(a), $(".v-message").fadeIn())
    };
    this.showSelectRoomPopup = function () {
        l()
    };
    this.showSelectTilesPopup = function () {
        A()
    };
    this.decorateActionsPrompt = function (a) {
        vobj(a);
        $(".v-decorate-action-button").hide();
        for (var c = 0; c < a.length; ++c) $(".v-decorate-action-button.v-action-" + a[c]).show();
        $(".v-decorate-actions-popup").fadeIn()
    };
    this.updateButtons = function () {
        n()
    };
    this.action = function (a, c, b, d) {
        e(a, c, b, d)
    }
}

function TilesVisualiser(a) {
    function b(a) {
        for (var b = 0; b < m.length; ++b) if (m[b] == a) return A[b];
        return ""
    }

    function e() {
        function a(b, e) {
            if (b == p.tiles.length) return void alert("Finished");
            var f = p.tiles[b];
            if ("" != f.dontMakeThumbnail) return void a(b + 1);
            vout("Making thumbnail: " + f.sku);
            var g = new VTileSet;
            g.setup(f.sku, !1);
            g.load("tiles/" + f.sku + "_c.png", function () {
                VUtils.getRandom();
                var c = g.tiles[0], e = document.createElement("canvas");
                e.height = 200;
                e.width = c.w * e.height / c.h;
                var h = e.getContext("2d");
                h.fillStyle =
                    "#FFFFFF";
                h.fillRect(0, 0, e.width, e.height);
                h.drawImage(g.canvas, c.x, c.y, c.w, c.h, 0, 0, e.width, e.height);
                d(e, "thumbnails/tiles", "thumbnails/tiles/" + f.sku + ".jpg", .8, function () {
                    a(b + 1)
                })
            })
        }

        alert("Making all thumbnails");
        a(0)
    }

    function d(a, b, d, e, f) {
        a = {
            base64Data: a.toDataURL("image/jpeg", e).replace(/^data:image\/(png|jpeg);base64,/, ""),
            folder: b,
            filename: d
        };
        $.post("vsavebase64.php", a, function (a) {
            null != f && f()
        })
    }

    if (!VUtils.webGLSupported()) return void alert("This application requires a browser that supports WebGL");
    var l = this;
    a = 14;
    -1 != location.href.indexOf("cjc-macbookpro") && (a += (new Date).getTime());
    var m = "Linear Brick Diamond Herringbone BlockHerringbone 3/4BrickBond".split(" "),
        A = "Linear,Brick,Diamond,Herringbone,Block Herringbone,&frac34; Brick Bond".split(","), f = null, v = !0,
        r = !1;
    this.showingFilters = !1;
    var h = null, t = "Tile", w = null, q = "FFFFFF", n = "", y = "Linear", g = "Undefined";
    this.curTileCategory = "Undefined";
    var k = !1, B = !1, z = !1;
    this.curSearchString = "";
    var D = {};
    this.recentlyUsedTiles = [];
    var p = new VDatabase, u = new GUI(l,
        p);
    u.showMessage("Loading...", -1);
    var L = ["database/TileMountainDatabase/rooms-Table 1.csv?" + a, "database/TileMountainDatabase/tileAreas-Table 1.csv?" + a, "database/TileMountainDatabase/roomTypes-Table 1.csv?" + a, "database/TileMountainDatabase/tiles-Table 1.csv?" + a, "database/TileMountainDatabase/tileCategories-Table 1.csv?" + a, "database/TileMountainDatabase/grout-Table 1.csv?" + a, "database/TileMountainDatabase/paint-Table 1.csv?" + a, "database/TileMountainDatabase/tileFilters-Table 1.csv?" + a];
    (function (a) {
        function b(a) {
            p.load(L,
                function () {
                    for (var b = [], d = 0; d < p.tiles.length; ++d) {
                        var c = p.tiles[d], e = p.xmlFeed[c.sku];
                        if (void 0 != e) {
                            if ("" == c.sku && (c.ignore = "y"), "" == c.ignore) {
                                c.disabled = !1;
                                c.name = e.name;
                                c.thumbnail = "thumbnails/tiles/" + c.sku + ".jpg";
                                c.type = "Tile";
                                "mosaic" == e.productType.toLowerCase() && (c.type = "Mosaic");
                                c.widthCM = parseFloat(e.width / 10);
                                c.heightCM = parseFloat(e.height / 10);
                                for (var f = [300, "Small", 600, "Medium"], g = "Large", h = 0; h < f.length; h += 2) if (c.size.split("x")[0] <= f[h] && c.size.split("x")[1] <= f[h]) {
                                    g = f[h + 1];
                                    break
                                }
                                c.size =
                                    g;
                                "" != c.noSingleTile ? c.noSingleTile = !0 : c.noSingleTile = !1;
                                c.patternsAllowed = "," + c.patternsAllowed + ",";
                                c.is = "Tile";
                                c.displaySize = "";
                                "" == c.canGo && (c.canGo = "Both");
                                c.canGoWhere = "Both";
                                c.isBorder = !1;
                                c.patternsAllowed = ",All,";
                                -1 != c.name.toLowerCase().indexOf("mosaic") && (c.patternsAllowed = ",Linear,");
                                c.canGo = "Both";
                                "wall" == e.floorOrWall ? c.canGo = "Wall" : "floor" == e.floorOrWall && (c.canGo = "Floor");
                                c.width = 10 * Math.max(c.widthCM, c.heightCM);
                                c.height = 10 * Math.min(c.widthCM, c.heightCM);
                                c.smallMosaicsW = 1;
                                c.smallMosaicsH =
                                    1;
                                "Mosaic" == c.type && (c.width = 10 * c.widthCM, c.height = 10 * c.heightCM, c.smallMosaicsW = parseInt(c.numSmallMosaics.split(",")[0]), c.smallMosaicsH = parseInt(c.numSmallMosaics.split(",")[1]), "" != c.mosaicsMultiplier ? (c.mosaicsMultiplierW = c.mosaicsMultiplier.split(",")[0], c.mosaicsMultiplierH = c.mosaicsMultiplier.split(",")[1]) : (c.mosaicsMultiplierW = 1, c.mosaicsMultiplierH = 1), c.mosaicsMultiplierW = -1, c.mosaicsMultiplierH = -1);
                                "" != c.overrideWH && (c.width = parseInt(c.overrideWH.split(",")[0]), c.height = parseInt(c.overrideWH.split(",")[1]));
                                b.push(c)
                            }
                        } else vout("@@@ ignore " + c.sku)
                    }
                    p.tiles = b;
                    p.tilesList = "";
                    for (d = 0; d < p.tiles.length; ++d) p.tilesList += "," + p.tiles[d].sku + ",";
                    for (d = 0; d < p.tileFilters.length; ++d) {
                        b = p.tileFilters[d];
                        e = b.tileProperty;
                        for (h = 0; h < p.tiles.length; ++h) c = p.tiles[h], "processed" == c.ignore && "" != c[e] && -1 == b.filterValues.indexOf(c[e]) && b.filterValues.push(c[e]);
                        b.filterValues = [];
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.push("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                        b.filterValues.sort();
                        D[b.tileProperty] = []
                    }
                    a()
                })
        }

        (function (a) {
            p.xmlFeed = {};
            VUtils.loadXMLFromURL("visualiser.xml", function (b) {
                $xml = $(b);
                $xml.find("item").each(function (a) {
                    a = {};
                    a.sku = $("sku", this).text();
                    a.name = $("name", this).text();
                    a.size = $("size", this).text();
                    a.width = parseInt($("width", this).text());
                    a.height = parseInt($("height", this).text());
                    a.image = $("image", this).text();
                    a.productType = $("product_type", this).text();
                    p.xmlFeed[a.sku] = a;
                    a.floorOrWall = $("floor_or_wall", this).text().toLowerCase()
                });
                a()
            })
        })(function () {
            b(function () {
                a()
            })
        })
    })(function () {
        f = new VTilingEngine(l, p);
        f.setup();
        f.configure("TilesVisualiser", "1.00", "#000000", "#444444", "#ffffff", "#444444", "C7F5C7");
        f.setOption("AddGroutThickness", 2);
        p.savedRooms = f.getSavedRooms();
        u.setup();
        -1 != location.href.indexOf("cjc-macbookpro") && l.setCurTileSKU(p.tiles[0].sku);
        -1 != location.href.indexOf("maketilethumbnails") && e()
    });
    this.action = function (a, b, d, e) {
        u.action(a,
            b, d, e)
    };
    this.broadcastAction = function (a) {
        switch (a) {
            case "ShowSelectTilesPopup":
                u.showSelectTilesPopup()
        }
    };
    this.broadcastMessage = function (a) {
        switch (vout("*** broadcastMessage: " + a), a) {
            case null:
                u.showMessage(null);
                break;
            case "LoadingRoom":
                u.showMessage("<img src='images/al.gif' />Loading...", -1);
                break;
            case "Updating":
                u.showMessage("<img src='images/al.gif' />Updating...", -1);
                break;
            case "CannotTileWithoutTileSelected":
                u.showMessage("First select a tile");
                break;
            case "CannotGroutWhereNoTiles":
                u.showMessage("Place tiles before grout");
                break;
            case "SurfaceCannotBePainted":
                u.showMessage("That surface cannot be painted");
                break;
            case "PatternChangeNoTiles":
                u.showMessage("No tiles to change");
                break;
            case "PatternChangePatternNotAllowed":
                u.showMessage("That tile cannot be set in a " + b(y) + " pattern");
                break;
            case "TileSurfaceBeforePlacingSingleTile":
                u.showMessage("Fill the surface with tiles before placing single tiles");
                break;
            case "NoTilesToRotate":
                u.showMessage("No tiles to rotate");
                break;
            case "CantRotateSquareTiles":
                u.showMessage("Cannot rotate square tiles");
                break;
            case "SendingEmail":
                u.showMessage("<img src='images/al.gif' />Sending Email");
                break;
            case "Saving":
                u.showMessage("<img src='images/al.gif' />Saving");
                break;
            case "CannotAddSingleTilesToPattern":
                u.showMessage("You cannot add single tiles to this pattern");
                break;
            case "EditZone":
                u.showMessage("Drag and resize the area and [click] the OK button to finish", 2E3);
                break;
            case "TileCannotGoOnWall":
                u.showMessage("That tile cannot be laid onto a wall.", 1500);
                break;
            case "TileCannotGoOnFloor":
                u.showMessage("That tile cannot be laid onto a floor.",
                    1500)
        }
    };
    this.abortOutlining = function () {
        f.abortOutlining()
    };
    this.decorateActionsPrompt = function (a) {
        u.decorateActionsPrompt(a)
    };
    this.decorated = function () {
        k = z = !1;
        u.updateButtons()
    };
    this.getDatabase = function () {
        return p
    };
    this.showFilters = function () {
        this.showingFilters = !0
    };
    this.showTiles = function () {
        this.showingFilters = !1
    };
    this.save = function () {
        f.save();
        p.savedRooms = f.getSavedRooms()
    };
    this.deleteSavedRoom = function (a) {
        f.deleteSavedRoom(a);
        p.savedRooms = f.getSavedRooms()
    };
    this.setCurSavedRoom = function (a) {
        if (r) return !1;
        r = !0;
        for (var b = 0; b < p.rooms.length; ++b) if (p.rooms[b].id == p.savedRooms[a].roomId) {
            h = p.rooms[b];
            break
        }
        return f.setCurSavedRoom(a, function () {
            r = !1
        }), !0
    };
    this.setCurRoom = function (a) {
        if (r) return !1;
        r = !0;
        for (var b = 0; b < p.rooms.length; ++b) if (p.rooms[b].id == a) {
            h = p.rooms[b];
            break
        }
        return f.setCurStockRoom(a, function () {
            r = !1;
            v && -1 == location.href.indexOf("cjc-macbookpro") && u.showSelectRoomPopup();
            v = !1;
            f.renderUndecoratedStockScene();
            u.updateButtons()
        }), !0
    };
    this.getCurRoom = function () {
        return h
    };
    this.getCurDecorateMode =
        function () {
            return t
        };
    this.setCurTileSKU = function (a) {
        null == w && u.showMessage("[Click] on a surface to decorate.");
        for (var b = 0; b < p.tiles.length; ++b) if (p.tiles[b].sku == a) {
            w = p.tiles[b];
            t = "Tile";
            b = p.tiles[b];
            for (var d = 0; d < l.recentlyUsedTiles.length; ++d) if (l.recentlyUsedTiles[d].sku == b.sku) {
                l.recentlyUsedTiles.splice(d, 1);
                break
            }
            l.recentlyUsedTiles.unshift(b);
            f.setCurTileSKU(a);
            k = z = !1;
            u.updateButtons();
            break
        }
    };
    this.tileExists = function (a) {
        return void 0 == p.tilesList ? !1 : -1 != p.tilesList.indexOf("," + a + ",") ? !0 :
            !1
    };
    this.getCurTile = function () {
        return w
    };
    this.setCurGrout = function (a) {
        q = a;
        t = "Grout";
        f.setCurGrout(a);
        B = z = !1
    };
    this.getCurGrout = function () {
        return q
    };
    this.setCurPaint = function (a) {
        n = a;
        t = "WallColour";
        f.setCurPaint(a);
        B = z = !1
    };
    this.getCurPaint = function () {
        return n
    };
    this.setCurPattern = function (a) {
        return null == a ? (k = !1, void f.setCurPattern(null)) : (y = a, f.setCurPattern(a), t = "Tile", k = !0, z = !1, void(B = !1))
    };
    this.isChangePatternMode = function () {
        return k
    };
    this.getCurPattern = function () {
        return y
    };
    this.setCurRoomType = function (a) {
        return g =
            a
    };
    this.getCurRoomType = function () {
        return g
    };
    this.setCurTileCategory = function (a) {
        l.curTileCategory = a
    };
    this.toggleSingleTileMode = function () {
        B = !B;
        t = "Tile";
        f.setSingleTileMode(B);
        k = z = !1
    };
    this.isSingleTileMode = function () {
        return B
    };
    this.toggleRotateTileMode = function () {
        z = !z;
        t = "Tile";
        f.setRotateTileMode(z);
        B = k = !1
    };
    this.isRotateTileMode = function () {
        return z
    };
    this.toggleFilter = function (a, b) {
        var d = D[a].indexOf(b);
        -1 == d ? D[a].push(b) : D[a].splice(d, 1);
        vobj(D)
    };
    this.filterIsOn = function (a, b) {
        return -1 != D[a].indexOf(b) ?
            !0 : !1
    };
    this.addNewZone = function () {
        z = B = k = !1;
        u.updateButtons();
        u.showMessage("[Click] on a surface to create a new tile area.", 3E4);
        f.addNewZone()
    };
    this.deleteZone = function () {
        f.deleteZone()
    };
    this.editZone = function () {
        u.showMessage("Drag and resize the area and [click] the OK button to finish", 2E3);
        f.editZone()
    };
    this.tileZone = function () {
        f.tileZone()
    };
    this.groutZone = function () {
        f.groutZone()
    };
    this.deleteSingleTile = function () {
        f.deleteSingleTile()
    };
    this.moveSingleTile = function () {
        u.showMessage("Drag the tile to a new position",
            2E3);
        f.moveSingleTile()
    };
    this.changeSingleTile = function () {
        f.changeSingleTile()
    };
    this.clear = function () {
        f.clear()
    };
    this.undo = function () {
        f.undo()
    };
    this.redo = function () {
        f.redo()
    };
    this.isRoomDecorated = function () {
        return f.isRoomDecorated()
    };
    this.anythingToUndo = function () {
        return f.anythingToUndo()
    };
    this.anythingToRedo = function () {
        return f.anythingToRedo()
    };
    this.getPrintData = function () {
        return f.getPrintData()
    };
    this.sendEmail = function (a, b, d) {
        d.replace(/\r\n|\r|\n/g, "<br />");
        a += " has shared this Tiles Visualiser room with you.<br><br>[[[RENDER]]]";
        a += "<p>" + d + "</p>";
        f.sendEmail("noreply@?????????.com.au", b, "Tiles Visualiser", a)
    };
    this.prepareShare = function (a, b) {
        f.prepareShare(a, "Tiles Visualiser", "I used the Tiles Visualiser", b)
    };
    this.sendShare = function () {
        f.sendShare("I used the Tiles Visualiser")
    };
    this.print = function () {
        f.print()
    }
}

var VUtils = {}, vIsTouch = void 0, vInitialTimer = (new Date).getTime(), vLastTimer = (new Date).getTime(),
    vDebugLoggingOn = !1, vImagesCache = [], vRandomSeed = 0;
-1 == location.href.indexOf("cjc-macbookpro") && -1 == location.href.indexOf("localhost") || (vDebugLoggingOn = !0);
VUtils.webGLSupported = function () {
    function a() {
        alert("BogRats")
    }

    function b() {
        alert("context restored")
    }

    if (console.log("New WebGL: Checking"), window.WebGLRenderingContext) {
        var e = document.createElement("canvas"), d = ["webgl", "experimental-webgl", "moz-webgl"], l = !1;
        e.addEventListener("webglcontextlost", a, !0);
        e.addEventListener("webglcontextrestored", b, !0);
        for (var m in d) try {
            if (l = e.getContext(d[m]), l && "function" == typeof l.getParameter) return d[m]
        } catch (A) {
        }
        return console.log("WebGL: Supported, but disabled"),
            !0
    }
    return console.log("WebGL: Not suppported"), !1
};
VUtils.OLDwebGLSupported = function () {
    if (console.log("WebGL: Checking"), window.WebGLRenderingContext) {
        var a = document.createElement("canvas"), b = ["webgl", "experimental-webgl", "moz-webgl"], e = !1, d;
        for (d in b) try {
            if (e = a.getContext(b[d]), e && "function" == typeof e.getParameter) return b[d]
        } catch (l) {
        }
        return console.log("WebGL: Supported, but disabled"), !1
    }
    return console.log("WebGL: Not suppported"), !1
};
VUtils.isTabletOrPhoneDevice = function () {
    return -1 != location.href.indexOf("vit-simtablet") ? !0 : -1 != navigator.userAgent.toLowerCase().indexOf("android") ? !0 : -1 != navigator.userAgent.toLowerCase().indexOf("ipad") ? !0 : -1 != navigator.userAgent.toLowerCase().indexOf("iphone") ? !0 : -1 != navigator.userAgent.toLowerCase().indexOf("ipod") ? !0 : !1
};
VUtils.isDesktopChromeVersion45 = function () {
    return -1 != navigator.userAgent.toLowerCase().indexOf("android") ? !1 : -1 != navigator.userAgent.toLowerCase().indexOf("ipad") ? !1 : -1 != navigator.userAgent.toLowerCase().indexOf("iphone") ? !1 : -1 != navigator.userAgent.toLowerCase().indexOf("ipod") ? !1 : -1 != navigator.userAgent.indexOf("Chrome") && "45" == navigator.userAgent.substring(navigator.userAgent.indexOf("Chrome") + 7, navigator.userAgent.indexOf("Chrome") + 9) ? !0 : !1
};
VUtils.isInternetExplorerBrowser = function () {
    return -1 != navigator.userAgent.indexOf("MSIE") ? !0 : -1 != navigator.userAgent.indexOf("Trident/") ? !0 : -1 != navigator.userAgent.indexOf("Edge/") ? !0 : !1
};
VUtils.isFirefoxBrowser = function () {
    return -1 != navigator.userAgent.indexOf("Firefox") ? !0 : !1
};
VUtils.getBaseURL = function () {
    return (new RegExp(/^.*\//)).exec(window.location.href)
};
VUtils.loadTextFromURL = function (a, b) {
    $.ajax({
        type: "GET", url: a, dataType: "text", success: function (a) {
            b(a)
        }, error: function (b, d, l) {
            verror("loadTextFromURL(): " + a + " - ajax error: jqXHR=" + b + " textStatus=" + d + " errorThrown=" + l)
        }, statusCode: {
            404: function () {
                verror("loadTextFromURL(): " + a + " - 404 page not found")
            }, 405: function () {
                verror("loadTextFromURL(): " + a + " - 405 page not found")
            }
        }
    })
};
VUtils.loadXMLFromURL = function (a, b) {
    $.ajax({
        type: "GET",
        url: 'loade_tile.php' ,
        dataType: "xml",
        success: function (a) {
            // console.log(a);
            b(a)
        }
        , error: function (d, b, c) {
            verror("loadXMLFromURL(): " + a + " - ajax error: jqXHR=" + d + " textStatus=" + b + " errorThrown=" + c)
        }, statusCode: {
            404: function () {
                verror("loadXMLFromURL(): " + a + " - 404 page not found")
            }, 405: function () {
                verror("loadXMLFromURL(): " + a + " - 405 page not found")
            }
        }
    });
    // $.ajax({
    //     type: "GET", url: a, dataType: "xml", success: function (a) {
    //         b(a)
    //     }, error: function (b, d, l) {
    //         verror("loadXMLFromURL(): " + a + " - ajax error: jqXHR=" + b + " textStatus=" + d + " errorThrown=" + l)
    //     }, statusCode: {
    //         404: function () {
    //             verror("loadXMLFromURL(): " + a + " - 404 page not found")
    //         }, 405: function () {
    //             verror("loadXMLFromURL(): " + a + " - 405 page not found")
    //         }
    //     }
    // })
};
VUtils.setRandomSeed = function (a) {
    vRandomSeed = a
};
VUtils.getRandom = function () {
    return vRandomSeed = (9301 * vRandomSeed + 49297) % 233280, vRandomSeed / 233280
};
Array.prototype.indexOf || (Array.prototype.indexOf = function (a, b) {
    b = b || 0;
    for (var e = this.length; e > b; b++) if (this[b] === a) return b;
    return -1
});
VUtils.getGUID = function () {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (a) {
        var b = 16 * Math.random() | 0;
        return ("x" == a ? b : 3 & b | 8).toString(16)
    })
};
VUtils.isPointInPolygon = function (a, b, e) {
    b = new VPoint(b, e);
    e = !1;
    for (var d = -1, l = a.length, m = l - 1; ++d < l; m = d) (a[d].y <= b.y && b.y < a[m].y || a[m].y <= b.y && b.y < a[d].y) && b.x < (a[m].x - a[d].x) * (b.y - a[d].y) / (a[m].y - a[d].y) + a[d].x && (e = !e);
    return e
};
VUtils.loadImageToSrc = function (a, b, e) {
    var d = new Image;
    d.onload = function () {
        $(b).attr("src") != a && $(b).attr("src", a);
        void 0 != e && null != e && e(b, d.width, d.height)
    };
    d.src = a
};
VUtils.loadImageURLIntoCanvas = function (a, b) {
    var e = new Image;
    e.crossOrigin = "Anonymous";
    e.onload = function () {
        canvas = document.createElement("canvas");
        canvas.width = e.width;
        canvas.height = e.height;
        canvas.getContext("2d").drawImage(e, 0, 0);
        b(canvas)
    };
    e.src = a
};
VUtils.loadExactPNGImageURLIntoCanvas = function (a, b) {
    var e = new Image;
    e.onload = function () {
        var a = document.createElement("canvas");
        a.width = e.width;
        a.height = e.height;
        a.getContext("2d").drawImage(e, 0, 0);
        b(a)
    };
    e.src = a
};
VUtils.getCanvasPixel24 = function (a, b, e) {
    a = a.getContext("2d").getImageData(b, e, 1, 1).data;
    b = a[0] << 16;
    return b += a[1] << 8, b + a[2]
};
VUtils.cacheImage = function (a, b) {
    vout("load: " + a);
    var e = new Image;
    e.onload = function () {
        vout("loaded: " + a);
        vImagesCache.push(e);
        void 0 != b && b()
    };
    e.src = a
};
VUtils.saveCookie = function (a, b) {
    var e = new Date;
    e.setMonth(e.getMonth() + 99);
    document.cookie = a + "=" + escape(b) + ";expires=" + e.toGMTString()
};
VUtils.loadCookie = function (a) {
    cookieArray = document.cookie.split(";");
    for (var b = 0; b < cookieArray.length; ++b) {
        var e = cookieArray[b].substr(0, cookieArray[b].indexOf("=")),
            d = cookieArray[b].substr(cookieArray[b].indexOf("=") + 1);
        if (-1 == cookieArray[b].indexOf("=") && (e = cookieArray[b], d = ""), e = e.replace(/^\s+|\s+$/g, ""), e == a) return unescape(d)
    }
    return null
};
VUtils.drawImage = function (a, b, e, d, l, m, A, f, v, r) {
    var h = v / d, t = r / l, w = b + d - a.width;
    0 < w && (d -= w, v -= w * h);
    w = e + l - a.height;
    0 < w && (l -= w, r -= w * t);
    0 > b && (A -= b * h, v += b * h, d += b, b = 0);
    0 > e && (f -= e * t, r += e * t, l += e, e = 0);
    m.drawImage(a, b, e, d, l, A, f, v, r)
};
VUtils.getScaledImage = function (a, b) {
    var e = a.width * b;
    b *= a.height;
    var d = document.createElement("canvas");
    return d.width = e, d.height = b, d.getContext("2d").drawImage(a, 0, 0, a.width, a.height, 0, 0, e, b), d
};
VUtils.GetQueryStringParam = function (a) {
    for (var b = window.location.search.substring(1).split("&"), e = 0; e < b.length; ++e) {
        var d = b[e].split("=");
        if (d[0] == a) return d[1]
    }
    return null
};
VUtils.convertRGBToHex = function (a, b, e) {
    return (("0" + parseInt(a, 10).toString(16)).slice(-2) + ("0" + parseInt(b, 10).toString(16)).slice(-2) + ("0" + parseInt(e, 10).toString(16)).slice(-2)).toUpperCase()
};
VUtils.loadiPadPhoto = function (a, b) {
    var e = new FileReader;
    e.onload = function (a) {
        a = atob(e.result.split(",")[1]);
        var d = EXIF.readFromBinaryFile(new BinaryFile(a)), m = new Image;
        m.src = e.result;
        m.onload = function () {
            VUtils.getFixedPhotoImage(m, d.Orientation, function (a) {
                void 0 != b && b(a)
            })
        }
    };
    e.readAsDataURL(a)
};
VUtils.getFixedPhotoImage = function (a, b, e) {
    var d = document.createElement("canvas");
    (function (a, b, d) {
        var e = a.naturalWidth, f = a.naturalHeight, h = a.width, l = a.height, m = b.getContext("2d");
        m.save();
        switch (d) {
            case 5:
            case 6:
            case 7:
            case 8:
                b.width = l;
                b.height = h;
                break;
            default:
                b.width = h, b.height = l
        }
        b = b.getContext("2d");
        switch (d) {
            case 2:
                b.translate(h, 0);
                b.scale(-1, 1);
                break;
            case 3:
                b.translate(h, l);
                b.rotate(Math.PI);
                break;
            case 4:
                b.translate(0, l);
                b.scale(1, -1);
                break;
            case 5:
                b.rotate(.5 * Math.PI);
                b.scale(1, -1);
                break;
            case 6:
                b.rotate(.5 *
                    Math.PI);
                b.translate(0, -l);
                break;
            case 7:
                b.rotate(.5 * Math.PI);
                b.translate(h, -l);
                b.scale(-1, 1);
                break;
            case 8:
                b.rotate(-.5 * Math.PI), b.translate(-h, 0)
        }
        d = a.naturalWidth;
        1048576 < d * a.naturalHeight ? (b = document.createElement("canvas"), b.width = b.height = 1, b = b.getContext("2d"), d = (b.drawImage(a, -d + 1, 0), 0 === b.getImageData(0, 0, 1, 1).data[3])) : d = !1;
        d && (e /= 2, f /= 2);
        d = document.createElement("canvas");
        d.width = d.height = 1024;
        b = d.getContext("2d");
        var q = f, n = document.createElement("canvas");
        n.width = 1;
        n.height = q;
        n = n.getContext("2d");
        n.drawImage(a, 0, 0);
        n = n.getImageData(0, 0, 1, q).data;
        for (var y = 0, g = q, k = q; k > y;) 0 === n[4 * (k - 1) + 3] ? g = k : y = k, k = g + y >> 1;
        q = k / q;
        h = Math.ceil(1024 * h / e);
        l = Math.ceil(1024 * l / f / (0 === q ? 1 : q));
        for (n = q = 0; f > q;) {
            for (g = y = 0; e > y;) b.clearRect(0, 0, 1024, 1024), b.drawImage(a, -y, -q), m.drawImage(d, 0, 0, 1024, 1024, g, n, h, l), y += 1024, g += h;
            q += 1024;
            n += l
        }
        m.restore()
    })(a, d, b);
    var l = new Image;
    l.onload = function () {
        void 0 != e && e(l)
    };
    l.src = d.toDataURL("image/png")
};
VUtils.callAfterScreenRefresh = function (a, b, e, d, l, m, A, f, v, r, h, t, w, q, n, y, g, k, B, z, D) {
    setTimeout(function () {
        a(b, e, d, l, m, A, f, v, r, h, t, w, q, n, y, g, k, B, z, D)
    }, 25)
};
VUtils.callAfterScreenRefresh2 = function (a, b, e, d, l, m, A, f, v, r, h, t, w, q, n, y, g, k, B, z, D) {
    setTimeout(function () {
        a(b, e, d, l, m, A, f, v, r, h, t, w, q, n, y, g, k, B, z, D)
    }, 600)
};
VUtils.clone = function (a) {
    if (!a || "object" != typeof a || "[object Function]" === Object.prototype.toString.call(a)) return a;
    if (a.nodeType && "cloneNode" in a) return a.cloneNode(!0);
    if (a instanceof Date) return new Date(a.getTime());
    if (a instanceof RegExp) return new RegExp(a);
    var b;
    if (a instanceof Array) {
        var e = [];
        var d = 0;
        for (b = a.length; b > d; ++d) d in a && e.push(VUtils.clone(a[d]))
    } else e = a.constructor ? new a.constructor : {};
    d = VUtils.clone;
    var l, m = {};
    for (l in a) b = a[l], l in e && (e[l] === b || l in m && m[l] === b) || (e[l] = d ?
        d(b) : b);
    return e
};
var devMode = !1;
-1 == location.href.indexOf("localhost") && -1 == location.href.indexOf("cjc-macbookpro") || (devMode = !0);